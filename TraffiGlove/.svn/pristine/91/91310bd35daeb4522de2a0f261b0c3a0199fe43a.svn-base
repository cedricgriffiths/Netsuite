/**
 * Module Description
 * 
 * Version    Date            Author           Remarks
 * 1.00       03 Mar 2017     cedricgriffiths
 *
 */

/**
 * @param {nlobjRequest} request Request object
 * @param {nlobjResponse} response Response object
 * @returns {Void} Any output is written via response object
 */
function suitelet(request, response){

	if (request.getMethod() == 'GET') 
	{
		//Get request - so return a form for the user to process
		//
		
		//Get parameters
		//
		var customerId = request.getParameter('customerid');
		var contactId = request.getParameter('contactid');
		var stage = Number(request.getParameter('stage'));
		
		// Create a form
		//
		var form = nlapiCreateForm('Man Pack Processing');
		form.setScript('customscript_bbs_manpack_suitelet_client');
		
		//Store the current stage in a field in the form so that it can be retrieved in the POST section of the code
		//
		var stageField = form.addField('custpage_stage', 'integer', 'stage');
		stageField.setDisplayType('hidden');
		stageField.setDefaultValue(stage);
		
		//Work out what the form layout should look like based on the stage number
		//
		switch(stage)
		{
		case 1:	
				//Stage 1 - ask for the relevant filter criteria before we display the items to select
				//
				form.setTitle('Man Pack Processing - Select Employee');
				
				//Display the customer name as based on the customer id passed in to the suitelet
				//
				var customerField = form.addField('custpage_customer_select', 'text', 'Customer');
				customerField.setDisplayType('disabled');
				
				var customerName = nlapiLookupField('customer', customerId, 'companyname');
				customerField.setDefaultValue(customerName);
				customerField.setDisplaySize(41);
				
				//Hold the customer id in a hidden field so that we can retrieve it later in the POST section
				//
				var customerIdField = form.addField('custpage_companyid', 'text', 'Company Id');
				customerIdField.setDisplayType('hidden');
				customerIdField.setDefaultValue(customerId);
				
				//Add a select field to pick the employee from
				//
				var contactField = form.addField('custpage_contact_select', 'select', 'Employee');
				contactField.setLayoutType('outsidebelow', 'startrow');
				contactField.setDisplaySize(500);
				
				//And add the employees to the select list by reading the customer record & looking at the related contacts
				//				
				var customerRecord = nlapiLoadRecord('customer', customerId);
				var contacts = customerRecord.getLineItemCount('contactroles');
				
				for (var int = 1; int <= contacts; int++) 
				{
					var contactName = customerRecord.getLineItemValue('contactroles', 'contactname', int);
					var contactId = customerRecord.getLineItemValue('contactroles', 'contact', int);
					
					contactField.addSelectOption(contactId, contactName);
				}
				
				//Add a submit button to the form
				//
				form.addSubmitButton('Select Items');
				
				break;
		
		case 2:	
				//Filter the items to display based on the criteria chosen in stage 1
				//
				form.setTitle('Man Pack Processing - Select Items');
				
				var fieldGroup1 = form.addFieldGroup('custpage_grp1', 'Customer And Employee');
				
				var customerField = form.addField('custpage_customer_select', 'text', 'Customer',null,'custpage_grp1');
				customerField.setDisplayType('disabled');
				customerField.setDisplaySize(41);
				
				var customerName = nlapiLookupField('customer', customerId, 'companyname');
				customerField.setDefaultValue(customerName);
				
				var contactField = form.addField('custpage_contact', 'text', 'Employee',null,'custpage_grp1');
				contactField.setDisplayType('disabled');
				contactField.setLayoutType('outsidebelow', 'startrow');
				contactField.setDisplaySize(41);
				
				var contactName = nlapiLookupField('contact', contactId, 'entityid');
				contactField.setDefaultValue(contactName);
				
				var tab = form.addTab('custpage_tab_items', 'Man Pack Items');
				tab.setLabel('Man Pack Items');
				
				var tab2 = form.addTab('custpage_tab_items2', '');
				//tab2.setLabel('Man Pack Items2');
				
				form.addField('custpage_tab2', 'text', 'test', null, 'custpage_tab_items2');
				
				form.addField('custpage_update_qty', 'integer', 'Quantity', null, 'custpage_tab_items');
				
				var subList = form.addSubList('custpage_sublist_items', 'list', 'Man Pack Items', 'custpage_tab_items');
				subList.addButton('custpage_update_all', 'Update All Quantities', 'updateItemQuantity()');
				subList.setLabel('Man Pack Items');
				
				var listSelect = subList.addField('custpage_sublist_tick', 'checkbox', 'Select', null);
				var listItem = subList.addField('custpage_sublist_item', 'text', 'Item', null);
				var listDescription = subList.addField('custpage_sublist_desc', 'text', 'Description', null);
				var listQty = subList.addField('custpage_sublist_qty', 'integer', 'Quantity', null);
				var listId = subList.addField('custpage_sublist_id', 'integer', 'Id', null);
				
				listQty.setDisplayType('entry');
				listId.setDisplayType('hidden');
				
				//TODO - add logic to filter items by contact/employee/grade etc.
				//
				
				//Get the items to pick from 
				//
				var filters = new Array();
				filters[0] = new nlobjSearchFilter('isinactive', null, 'is', 'F');
				
				var columns = new Array();
				columns[0] = new nlobjSearchColumn('itemid');
				columns[1] = new nlobjSearchColumn('displayname');
				
				var results = nlapiSearchRecord('inventoryitem', null, filters, columns);
				
				//Copy the results to the sublist
				//
				for (var int = 0; int < results.length; int++) 
				{
					var line = int + 1;
					
					subList.setLineItemValue('custpage_sublist_item', line, results[int].getValue('itemid'));
					subList.setLineItemValue('custpage_sublist_desc', line, results[int].getValue('displayname'));
					subList.setLineItemValue('custpage_sublist_id', line, results[int].getId());
				}
				
				//Add a mark/unmark button
				//
				subList.addMarkAllButtons();
		
				form.addSubmitButton('Finish');
				
				break;
			}
		
		//Write the response
		//
		response.writePage(form);
	}
	else
	{
		//Post request - so process the returned form
		//
		
		//Get the stage of the manpack processing we are at
		//
		var stage = Number(request.getParameter('custpage_stage'));
		
		switch(stage)
		{
			case 1:
				//Selected contact/employee
				//
				var contactId = request.getParameter('custpage_contact_select');
				var customerId = request.getParameter('custpage_companyid');
				
				var url = nlapiResolveURL('SUITELET', 'customscript_bbs_manpack_suitelet', 'customdeploy_bbs_manpack_suitelet');
				
				//Build up the parameters so we can call this suitelet again, but move it on to the next stage
				//
				var params = new Array();
				params['customerid'] = customerId;
				params['contactid'] = contactId;
				params['stage'] = '2';
				
				response.sendRedirect('SUITELET','customscript_bbs_manpack_suitelet', 'customdeploy_bbs_manpack_suitelet', null, params);
				
				break;
				
			case 2:
				//Selected items to add to sales order
				//
				var data = new Array();
				
				var lineCount = request.getLineItemCount('custpage_sublist_items');
				
				//Find all the ticked items & their quantities
				//
				for (var int = 1; int <= lineCount; int++) 
				{
					var ticked = request.getLineItemValue('custpage_sublist_items', 'custpage_sublist_tick', int);
					
					if (ticked == 'T')
						{
							var item = request.getLineItemValue('custpage_sublist_items', 'custpage_sublist_item', int);
							var qty = request.getLineItemValue('custpage_sublist_items', 'custpage_sublist_qty', int);
							var id = request.getLineItemValue('custpage_sublist_items', 'custpage_sublist_id', int);
							
							if (qty > 0)
								{
									var line = [item,qty,id];
									data.push(line);
								}
						}
				}
				
				//Convert the array of items to a JSON string & return it back to the sales order form callback routine
				//
				var dataString = JSON.stringify(data);
				var xml = "<html><body><script>window.opener.manpackCallback('" + dataString + "'); window.close();</script></body></html>";
				response.write(xml);
				
				break;
		}
	}
}